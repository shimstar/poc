<rml>
	<head>
		<title>dialogue</title>
		<link type="text/template" href="windowx.rml" />
		<style>
			body
			{
				width: 1000px;
				height: 700px;
				position: absolute;
				top : 15px;
				left : 200px;
				margin: auto;
			}

			div#title_bar div#icon
			{
				icon-image-s: 230px 281px;
				icon-image-t: 152px 191px;

				display: none;
			}

			form div
			{
				width: 200px;
				margin: auto;
			}
		</style>
	<script>
from shimstar.npc.npcinstation import *
from shimstar.user.user import *
from shimstar.network.network import *
from shimstar.core.function import *
from shimstar.constantes import *
from shimstar.world.zone.zone import *
def onClose(doc):
	doc.Hide()
def onLoad(doc):
	titleBar=doc.GetElementById("title")
	titleBar.inner_rml="Dialogue"
	
def onAccept(doc):
	missionId=int(doc.GetElementById("idmission").value)
	network.reference.sendMessage(C_CHAR_UPDATE,str(user.instance.getId())+ "/" +str(user.instance.getCurrentCharacter().getId())+"/acceptmission=" + str(missionId))
	self.hideMissionPanel()
	
def cancelMission(self,windowEventArgs):
	missionId=int(doc.GetElementById("idmission").value)
	network.reference.sendMessage(C_CHAR_UPDATE,str(user.instance.getId())+ "/" +str(user.instance.getCurrentCharacter().getId())+"/cancelmission=" + str(missionId))
	self.hideMissionPanel()
	
def endMission(self,windowEventArgs):
	missionId=doc.GetElementById("idmission").value
	npcChoosed=doc.GetElementById("idpnj").value
	network.reference.sendMessage(C_CHAR_UPDATE,str(user.instance.getId())+ "/" +str(user.instance.getCurrentCharacter().getId())+"/endmission=" + str(missionId) + "#" +str(npcChoosed.getId()))
	self.hideMissionPanel()
	
def onClickMission(doc,missionId):
	doc.GetElementById("idmission").value=str(missionId)
	diag=doc.GetElementById("dialogue1")
	diag.SetAttribute("style","width:600px;height:500px;display:None;")
	diag=doc.GetElementById("dialogue2")
	diag.SetAttribute("style","width:600px;height:300px;display:Block;")
	diag=doc.GetElementById("rewards")
	diag.SetAttribute("style","width:600px;height:100px;display:Block;")
	diag=doc.GetElementById("destination")
	diag.SetAttribute("style","width:600px;height:100px;display:Block;")
	diag=doc.GetElementById("accept")
	diag.SetAttribute("style","width:100;height:30px;display:Block;")
	diag=doc.GetElementById("cancel")
	diag.SetAttribute("style","width:100px;height:30px;display:Block;")
	diag=doc.GetElementById("finish")
	diag.SetAttribute("style","width:100px;height:30px;display:Block;")
	npcChoosed=NPCInStation(int(doc.GetElementById("idpnj").value))
	m=npcChoosed.getMission(int(missionId))
	if m!=None:
		charMissions=user.instance.getCurrentCharacter().getMissions()
		found=False
		statusMission=C_STATEMISSION_DONTHAVE
		for mc in charMissions:
			if mc.getId()==int(missionId):
				found=True
				statusMission=user.instance.getCurrentCharacter().evaluateMission(mc.getId(),npcChoosed.getId())
				break
				
		if statusMission==C_STATEMISSION_SUCCESS:
			diag=doc.GetElementById("accept")
			diag.SetAttribute("style","width:100;height:30px;display:None;")
			diag=doc.GetElementById("cancel")
			diag.SetAttribute("style","width:100;height:30px;display:Block;")
			diag=doc.GetElementById("finish")
			diag.SetAttribute("style","width:100;height:30px;display:Block;")
			dialog=m.getPostDialog()
			if dialog!=None:
				dial=transFormHtml(dialog.getText())
				diag=doc.GetElementById("dialogue2")
				diag.inner_rml=str(dial) 
		elif found==True:
			diag=doc.GetElementById("accept")
			diag.SetAttribute("style","width:100;height:30px;display:None;")
			diag=doc.GetElementById("cancel")
			diag.SetAttribute("style","width:100;height:30px;display:Block;")
			diag=doc.GetElementById("finish")
			diag.SetAttribute("style","width:100;height:30px;display:None;")
			dialog=m.getCurrentDialog()
			if dialog!=None:
				dial=transFormHtml(dialog.getText())
				diag=doc.GetElementById("dialogue2")
				diag.inner_rml=str(dial) 
		else:
			diag=doc.GetElementById("accept")
			diag.SetAttribute("style","width:100;height:30px;display:Block;")
			diag=doc.GetElementById("cancel")
			diag.SetAttribute("style","width:100;height:30px;display:None;")
			diag=doc.GetElementById("finish")
			diag.SetAttribute("style","width:100;height:30px;display:None;")
			dialog=m.getPreDialog()
			if dialog!=None:
				dial=transFormHtml(dialog.getText())
				diag=doc.GetElementById("dialogue2")
				diag.inner_rml=str(dial) 
				
		objectifs=m.getObjectifs()

		for o in objectifs:
			textObj=o.getText()
			if o.getIdType()==C_OBJECTIF_DESTROY:
				idItem=o.getIdItem()
				it=ShimstarItem(idItem)
				textObj+=" : " + str(o.getNbItemCharacter()) + " / " + str(o.getNbItem()) + " " + it.getName()
			textObj=transFormHtml(textObj)
			diag=doc.GetElementById("destination")
			diag.inner_rml=str(textObj)
			
		idEndingNPC=m.getEndingNPC()
		endingNPC=NPCInStation(idEndingNPC)
		stationNpc=zone(endingNPC.getLocation())
		textRecompense="Voir pour votre recompense : " + str(endingNPC.getName()) + " a la station " + stationNpc.getName()
		rewards=m.getRewards()
		for r in rewards:
			if r.getTypeReward()==C_REWARD_COIN:
				textRecompense+="<br/>           " + str(r.getNb()) + " Credits imperiaux"
		textRecompense=transFormHtml(textRecompense)
		diag=doc.GetElementById("rewards")
		diag.inner_rml=str(textRecompense)
				
				
def onClickDialogue(doc,keyword):
	diag=doc.GetElementById("dialogue1")
	diag.SetAttribute("style","width:600px;height:500px;display:Block;")
	diag=doc.GetElementById("dialogue2")
	diag.SetAttribute("style","width:600px;height:300px;display:None;")
	diag=doc.GetElementById("rewards")
	diag.SetAttribute("style","width:600px;height:100px;display:None;")
	diag=doc.GetElementById("destination")
	diag.SetAttribute("style","width:600px;height:100px;display:None;")
	diag=doc.GetElementById("accept")
	diag.SetAttribute("style","width:100;height:30px;display:None;")
	diag=doc.GetElementById("cancel")
	diag.SetAttribute("style","width:100px;height:30px;display:None;")
	diag=doc.GetElementById("finish")
	diag.SetAttribute("style","width:100px;height:30px;display:None;")
	npcChoosed=NPCInStation(int(doc.GetElementById("idpnj").value))
	dialog=npcChoosed.getDialogueFromKeyword(keyword)
	if user.instance.getCurrentCharacter().appendDialogs(dialog.getId())==True:
		network.reference.sendMessage(C_CHAR_UPDATE,str(user.instance.getId())+ "/" +str(user.instance.getCurrentCharacter().getId())+"/readdialogue=" + str(dialog.getId()))   					
	diag=doc.GetElementById("dialogue1")
	dial=transFormHtml(dialog.getText())
	diag.inner_rml=str(dial) 
	
	</script>
	
	</head>
	<body template="pywindow" onLoad="onLoad(document)">
	<div style="position:absolute; top:-1080px; left:-1050px;;width:100px;">
			<input type="hidden" name="idpnj" id="idpnj" value=""/>
			<input type="hidden" name="idmission" id="idmission" value=""/>
	</div>
	<div style="position:absolute; top:80px; left:-400px;">
				<img src="" id="facechar" width="150" height="150"/>
	</div>
	<div id="contentdialogue">
		
	</div>
		<div style="position:absolute; top:50px; left:200px;">
				<button class="totext" style="width:600px;height:300px;display:None;text-align:left;" id="dialogue1"></button>
		</div>
		<div style="position:absolute; top:50px; left:200px;">
				<button class="totext" style="width:600px;height:600px;display:None;text-align:left;" id="dialogue2"></button>
		</div>
		<div style="position:absolute; top:370px; left:200px;">
				<button class="totext" style="width:600px;height:100px;display:None;text-align:left;" id="destination"></button>
		</div>
		<div style="position:absolute; top:490px; left:200px;">
				<button class="totext" style="width:600px;height:100px;display:None;text-align:left;" id="rewards"></button>
		</div>
		<div style="position:absolute; top:630px; left:300px;">
			<button class="topress" style="width:100px;height:30px;display:None;" id="accept">Accepter</button>
		</div>
		<div style="position:absolute; top:630px; left:430px;">
				<button class="topress" style="width:100px;height:30px;display:None;" id="cancel">Abandonner</button>
		</div>
		<div style="position:absolute; top:630px; left:560px;">
				<button class="topress" style="width:100px;height:30px;display:None;" id="finish">Terminer</button>
		</div>
	</body>
</rml>
